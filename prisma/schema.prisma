generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String
  password String
  icon     String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Developer {
  id           String                   @id @default(uuid())
  name         String
  last_name    String
  age          Int
  icon         String
  email        String
  technologies DevelopersTechnologies[]
  roles        DevelopersRoles[]
  projects ProjectsDevelopers[]

  created_at         DateTime?            @default(now())
  updated_at         DateTime?            @default(now())

  @@map("developers")
}

model Technology {
  id          String                   @id @default(uuid())
  name        String
  description String
  developers  DevelopersTechnologies[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  project    Project? @relation(fields: [project_id], references: [id])
  project_id String?

  @@map("technologies")
}

model Role {
  id         String            @id @default(uuid())
  name       String
  developers DevelopersRoles[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("roles")
}

model Project {
  id           String       @id @default(uuid())
  name         String
  description  String[]
  development  Boolean      @default(false)
  icon         String
  technologies Technology[]
  developers ProjectsDevelopers[]

  created_at         DateTime?            @default(now())
  updated_at         DateTime?            @default(now())

  @@map("projects")
}

model DevelopersRoles {
  developer   Developer @relation(fields: [developerId], references: [id])
  developerId String
  role        Role      @relation(fields: [roleId], references: [id])
  roleId      String

  @@id([developerId, roleId])
  @@map("developers_roles")
}

model DevelopersTechnologies {
  developer    Developer  @relation(fields: [developerId], references: [id])
  developerId  String
  technology   Technology @relation(fields: [technologyId], references: [id])
  technologyId String

  @@id([developerId, technologyId])
  @@map("developers_technologies")
}

model ProjectsDevelopers {
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   String
  developer   Developer @relation(fields: [developerId], references: [id])
  developerId String

  @@id([projectId, developerId])
  @@map("projects_developers")
}
